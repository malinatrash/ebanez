import aiohttp
import logging
from typing import Dict, Tuple
from datetime import datetime

logger = logging.getLogger(__name__)

class WeatherService:
    def __init__(self):
        self.weather_base_url = "https://api.open-meteo.com/v1/forecast"
        self.geocoding_url = "https://geocoding-api.open-meteo.com/v1/search"
        
        self.lat = 52.2978
        self.lon = 104.2964
        
        self.weather_enabled_groups = [
           -1002321513211
        ]

    async def get_weather_and_traffic(self) -> str:
        """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ –≤ –ò—Ä–∫—É—Ç—Å–∫–µ"""
        try:
            weather_info = await self._get_weather()
            recommendations = self._generate_recommendations(weather_info)
            
            weather_message = (
                f"üå§ –ü–æ–≥–æ–¥–∞ –≤ –ò—Ä–∫—É—Ç—Å–∫–µ:\n"
                f"–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {weather_info['temp']}¬∞C\n"
                f"–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫: {weather_info['feels_like']}¬∞C\n"
                f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {weather_info['humidity']}%\n"
                f"–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞: {weather_info['wind_speed']} –∫–º/—á\n"
                f"–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤: {weather_info['precipitation']}%\n\n"
                f"üëî –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n{recommendations}\n\n"
                f"üöó –°–∏—Ç—É–∞—Ü–∏—è –Ω–∞ –¥–æ—Ä–æ–≥–∞—Ö:\n"
                f"–í –±—É–¥–Ω–∏–µ –¥–Ω–∏ —Å 8:00 –¥–æ 10:00 –∏ —Å 17:00 –¥–æ 19:00 –≤–æ–∑–º–æ–∂–Ω—ã –∑–∞—Ç—Ä—É–¥–Ω–µ–Ω–∏—è "
                f"–Ω–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–∞–≥–∏—Å—Ç—Ä–∞–ª—è—Ö –≥–æ—Ä–æ–¥–∞ (—É–ª. –õ–µ–Ω–∏–Ω–∞, —É–ª. –ö–∞—Ä–ª–∞ –ú–∞—Ä–∫—Å–∞, "
                f"–ê–∫–∞–¥–µ–º–∏—á–µ—Å–∫–∏–π –º–æ—Å—Ç)"
            )
            
            return weather_message
            
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ: {e}")
            return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–≥–æ–¥–µ üòî"

    async def _get_weather(self) -> Dict:
        """–ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ —á–µ—Ä–µ–∑ OpenMeteo API"""
        params = {
            "latitude": self.lat,
            "longitude": self.lon,
            "current": ["temperature_2m", "relative_humidity_2m", "apparent_temperature", "wind_speed_10m", "precipitation_probability"],
            "timezone": "Asia/Irkutsk"
        }
        
        async with aiohttp.ClientSession() as session:
            async with session.get(self.weather_base_url, params=params) as response:
                if response.status == 200:
                    data = await response.json()
                    current = data["current"]
                    return {
                        "temp": round(current["temperature_2m"]),
                        "feels_like": round(current["apparent_temperature"]),
                        "humidity": current["relative_humidity_2m"],
                        "wind_speed": round(current["wind_speed_10m"]),
                        "precipitation": current["precipitation_probability"]
                    }
                else:
                    raise Exception(f"Weather API returned status code {response.status}")

    def _generate_recommendations(self, weather_data: Dict) -> str:
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø–æ–≥–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
        recommendations = []
        temp = weather_data["temp"]
        wind_speed = weather_data["wind_speed"]
        precipitation = weather_data["precipitation"]
        
        if temp < -25:
            recommendations.append("–í–æ–æ–±—â–µ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç–µ!")
        elif temp < -15:
            recommendations.append("üß• –û–¥–µ–Ω—å—Ç–µ—Å—å –æ—á–µ–Ω—å —Ç–µ–ø–ª–æ, –Ω–∞ —É–ª–∏—Ü–µ —Å–∏–ª—å–Ω—ã–π –º–æ—Ä–æ–∑!")
        elif temp < 0:
            recommendations.append("üß• –ù–µ –∑–∞–±—É–¥—å—Ç–µ —Ç–µ–ø–ª—É—é –∫—É—Ä—Ç–∫—É –∏ —à–∞–ø–∫—É")
        elif temp < 10:
            recommendations.append("üß• –ü—Ä–æ—Ö–ª–∞–¥–Ω–æ, –≤–æ–∑—å–º–∏—Ç–µ –∫—É—Ä—Ç–∫—É")
        elif temp < 20:
            recommendations.append("üëï –ö–æ–º—Ñ–æ—Ä—Ç–Ω–∞—è –ø–æ–≥–æ–¥–∞ –¥–ª—è –ª–µ–≥–∫–æ–π –æ–¥–µ–∂–¥—ã")
        else:
            recommendations.append("üëï –ñ–∞—Ä–∫–æ! –ù–∞–¥–µ–Ω—å—Ç–µ —á—Ç–æ-–Ω–∏–±—É–¥—å –ª–µ–≥–∫–æ–µ")

        if wind_speed > 20:
            recommendations.append("üí® –û—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π –≤–µ—Ç–µ—Ä, –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã!")
        elif wind_speed > 10:
            recommendations.append("üå¨ –í–µ—Ç—Ä–µ–Ω–æ, –≤–æ–∑—å–º–∏—Ç–µ –≤–µ—Ç—Ä–æ–≤–∫—É")

        if precipitation > 70:
            recommendations.append("‚òîÔ∏è –í—ã—Å–æ–∫–∞—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—Å–∞–¥–∫–æ–≤, –≤–æ–∑—å–º–∏—Ç–µ –∑–æ–Ω—Ç!")
        elif precipitation > 30:
            recommendations.append("üåÇ –í–æ–∑–º–æ–∂–Ω—ã –æ—Å–∞–¥–∫–∏, –∑–æ–Ω—Ç –Ω–µ –ø–æ–º–µ—à–∞–µ—Ç")

        return "\n".join(recommendations)

    def is_weather_enabled(self, chat_id: int) -> bool:
        """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –≤–∫–ª—é—á–µ–Ω–∞ –ª–∏ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ–≥–æ–¥—ã –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–∞"""
        return chat_id in self.weather_enabled_groups
